     1                                  ; Chapter 8, exercise 3
     2                                  ; This exercise performs the following:
     3                                  ; * Computes the lateral total surface area (including the base) of
     4                                  ;   each pyramid in a set of square pyramids
     5                                  ; * Computes the volume of each pyramid in a set of square pyramids
     6                                  ; * Finds the minimum, maximum, sum, and average for the total
     7                                  ;   surface areas and volumes
     8                                  
     9                                  ; Formulas (where n is a pyramid from the set of pyramids):
    10                                  ; * totalSurfaceArea(n) = a(n)^2 + 2*a(n)*l(n)
    11                                  ;     where "a" is the base's length
    12                                  ;     and "l" is the slant height (height of each side face)
    13                                  ; * volume(n) = (a(n)^2 * h(n)) / 3
    14                                  ;     where "a" is the base's length
    15                                  ;     and "h" is the pyramid's height
    16                                  
    17                                  DEFAULT REL
    18                                  
    19                                  ; ***************************
    20                                  
    21                                  section     .data
    22                                  
    23                                  ; Constants
    24                                  SUCCESS     equ     0
    25                                  SYS_exit    equ     0x2000001
    26                                  
    27                                  ; Variables
    28 00000000 0A0E0D2536              a           db      10, 14, 13, 37, 54                          ; List of a (base length) values
    29 00000005 1F0D143D24                          db      31, 13, 20, 61, 36
    30 0000000A 0E352C132A                          db      14, 53, 44, 19, 42
    31 0000000F 1B29353E0A                          db      27, 41, 53, 62, 10
    32 00000014 13120E0A0F                          db      19, 18, 14, 10, 15
    33 00000019 0F0B162146                          db      15, 11, 22, 33, 70
    34 0000001E 0F170F3F1A                          db      15, 23, 15, 63, 26
    35 00000023 18210A3D0F                          db      24, 33, 10, 61, 15
    36 00000028 0E220D4751                          db      14, 34, 13, 71, 81
    37 0000002D 260D1D115D                          db      38, 13, 29, 17, 93
    38                                  
    39 00000032 D1045A04ED066B048B-     l           dw      1233, 1114, 1773, 1131, 1675                ; List of l (slant height) values
    39 0000003B 06                 
    40 0000003C 8C04B507B607630484-                 dw      1164, 1973, 1974, 1123, 1156
    40 00000045 04                 
    41 00000046 4005D806B5077604B0-                 dw      1344, 1752, 1973, 1142, 1456
    41 0000004F 05                 
    42 00000050 8D04DA06F90497040A-                 dw      1165, 1754, 1273, 1175, 1546
    42 00000059 06                 
    43 0000005A 81048906AD051F06FF-                 dw      1153, 1673, 1453, 1567, 1535
    43 00000063 05                 
    44 00000064 78042B06E4061F0636-                 dw      1144, 1579, 1764, 1567, 1334
    44 0000006D 05                 
    45 0000006E B0051B061C06D9068D-                 dw      1456, 1563, 1564, 1753, 1165
    45 00000077 04                 
    46 00000078 6E064607B1058F04FE-                 dw      1646, 1862, 1457, 1167, 1534
    46 00000081 05                 
    47 00000082 4B074807DD06DB06AD-                 dw      1867, 1864, 1757, 1755, 1453
    47 0000008B 05                 
    48 0000008C 47078906FB04DC0649-                 dw      1863, 1673, 1275, 1756, 1353
    48 00000095 05                 
    49                                  
    50 00000096 413700007E2B000013-     h           dd      14145, 11134, 15123, 15123, 14123           ; List of h (height) values
    50 0000009F 3B0000133B00002B37-
    50 000000A8 0000               
    51 000000AA 164800005E3C00007C-                 dd      18454, 15454, 12156, 12164, 12542
    51 000000B3 2F0000842F0000FE30-
    51 000000BC 0000               
    52 000000BE 1548000015480000B0-                 dd      18453, 18453, 11184, 15142, 12354
    52 000000C7 2B0000263B00004230-
    52 000000D0 0000               
    53 000000D2 E4380000363700007C-                 dd      14564, 14134, 12156, 12344, 13142
    53 000000DB 2F0000383000005633-
    53 000000E4 0000               
    54 000000E6 912B00006F48000004-                 dd      11153, 18543, 17156, 12352, 15434
    54 000000EF 430000403000004A3C-
    54 000000F8 0000               
    55 000000FA 17480000363700005B-                 dd      18455, 14134, 12123, 15324, 13453
    55 00000103 2F0000DC3B00008D34-
    55 0000010C 0000               
    56 0000010E 7E2B00003637000034-                 dd      11134, 14134, 15156, 15234, 17142
    56 00000117 3B0000823B0000F642-
    56 00000120 0000               
    57 00000122 6F4C00003637000066-                 dd      19567, 14134, 12134, 17546, 16123
    57 0000012B 2F00008A440000FB3E-
    57 00000134 0000               
    58 00000136 7E2B000036370000F0-                 dd      11134, 14134, 14576, 15457, 17142
    58 0000013F 380000613C0000F642-
    58 00000148 0000               
    59 0000014A 61330000912B000098-                 dd      13153, 11153, 12184, 14142, 17134
    59 00000153 2F00003E370000EE42-
    59 0000015C 0000               
    60                                  
    61 0000015E 05                      num         db      5                                           ; Number of square pyramids
    62                                  
    63 0000015F 00000000                tSa         dd      0                                           ; Sum of all surface areas
    64 00000163 FFFFFF7F                minSa       dd      0x7fffffff                                  ; Min SA
    65 00000167 00000000                maxSa       dd      0                                           ; Max SA
    66 0000016B 00000000                avgSa       dd      0                                           ; Avg SA
    67                                  
    68 0000016F 00000000                tVol        dd      0                                           ; Sum of all volumes
    69 00000173 FFFFFF7F                minVol      dd      0x7fffffff                                  ; Min Vol
    70 00000177 00000000                maxVol      dd      0                                           ; Max Vol
    71 0000017B 00000000                avgVol      dd      0                                           ; Avg Vol
    72                                  
    73 0000017F 0200                    w2          dw      2
    74 00000181 03000000                d3          dd      3
    75                                  
    76                                  ; ***************************
    77                                  
    78                                  section     .bss
    79                                  
    80 00000000 <res C8h>               tSaArr      resd    50                  ; Array of total surface areas
    81 000000C8 <res C8h>               tVolArr     resd    50                  ; Array of total volumes
    82                                  
    83                                  ; ***************************
    84                                  
    85                                  section     .text
    86                                  global _start
    87                                  _start:
    88                                  
    89 00000000 8A0D(5E010000)              mov     cl, [num]                   ; Initialize loop counter register
    90 00000006 4C8D05(00000000)            lea     r8, [a]                     ; Initialize displacements
    91 0000000D 4C8D0D(32000000)            lea     r9, [l]
    92 00000014 4C8D15(96000000)            lea     r10, [h]
    93 0000001B 4C8D2D(00000000)            lea     r13, [tSaArr]
    94 00000022 4C8D35(C8000000)            lea     r14, [tVolArr]
    95 00000029 41BB00000000                mov     r11, 0                      ; r11 is our register index
    96                                  
    97                                  ; -----
    98                                  ; Calculate totalSurfaceArea(n) and volume(n)
    99                                  ; Add each index's total to a surface area and volume array
   100                                  
   101                                  totalSurfaceArea:
   102                                  
   103                                                                          ; * totalSurfaceArea(n) = a(n)^2 + 2*a(n)*l(n)
   104 0000002F 430FB60418                  movzx   eax, byte [r8 + r11*1]      ; Load a(n)
   105 00000034 89C3                        mov     ebx, eax                    ; Pass the same thing into bl
   106 00000036 F7E0                        mul     eax                         ; a(n)^2
   107 00000038 4189C4                      mov     r12d, eax                   ; Load a(n)^2 to r12
   108 0000003B 430FB70459                  movzx   eax, word [r9 + r11*2]      ; Load l(n)
   109 00000040 F7E3                        mul     ebx                         ; 2*a(n)*l(n) + a(n)^2
   110 00000042 66F725(7F010000)            mul     word [w2]
   111 00000049 4401E0                      add     eax, r12d
   112 0000004C 4389449D00                  mov     [r13 + r11*4], eax          ; Move totalSurfaceArea(n) to total surface area array
   113 00000051 0105(5F010000)              add     [tSa], eax                  ; tSa += totalSurfaceArea(n)
   114 00000057 49FFC3                      inc     r11
   115 0000005A E2D3                        loop    totalSurfaceArea
   116 0000005C 8A0D(5E010000)              mov     cl, [num]                   ; Reset counters
   117 00000062 41BB00000000                mov     r11, 0
   118                                  
   119                                  totalVolume:
   120                                                                          ; * volume(n) = (a(n)^2 * h(n)) / 3
   121 00000068 430FB60418                  movzx   eax, byte [r8 + r11*1]      ; Load a(n)
   122 0000006D F7E0                        mul     eax                         ; a(n)^2
   123 0000006F 438B1C9A                    mov     ebx, [r10 + r11*4]          ; Load h(n)
   124 00000073 F7E3                        mul     ebx                         ; a(n)^2 * h(n)
   125 00000075 F735(81010000)              div     dword [d3]                  ; (a(n)^2 * h(n)) / 3
   126 0000007B 4389049E                    mov     [r14 + r11*4], eax          ; Move volume(n) to total volume array
   127 0000007F 0105(6F010000)              add     [tVol], eax                 ; tVol += volume(n)
   128 00000085 49FFC3                      inc     r11
   129 00000088 E2DE                        loop    totalVolume
   130 0000008A 8A0D(5E010000)              mov     cl, [num]                   ; Reset counters
   131 00000090 41BB00000000                mov     r11, 0
   132                                  
   133                                  ; -----
   134                                  ; Calculate min/max/average for totalSurfaceArea(n) and volume(n)
   135                                  
   136                                  statsStart:
   137                                  
   138 00000096 438B449D00                  mov     eax, [r13 + r11*4]          ; Move totalSurfaceArea(n) to eax
   139 0000009B 438B1C9E                    mov     ebx, [r14 + r11*4]          ; Move volume(n) to ebx
   140                                  
   141                                  checkMinSa:
   142                                  
   143 0000009F 3905(63010000)              cmp     [minSa], eax                ; if minSa > totalSurfaceArea(n)
   144 000000A5 7F1A                        jg      setMinSa
   145                                  
   146                                  checkMaxSa:
   147                                  
   148 000000A7 3905(67010000)              cmp     [maxSa], eax                ; if maxSa < totalSurfaceArea(n)
   149 000000AD 7C1A                        jl      setMaxSa
   150                                  
   151                                  checkMinVol:
   152                                  
   153 000000AF 391D(73010000)              cmp     [minVol], ebx               ; if minVol > volume(n)
   154 000000B5 7F1A                        jg      setMinVol
   155                                  
   156                                  checkMaxVol:
   157                                  
   158 000000B7 391D(77010000)              cmp     [maxVol], ebx               ; if maxVol < volume(n)
   159 000000BD 7C1A                        jl      setMaxVol
   160 000000BF EB1E                        jmp     statsEnd
   161                                  
   162                                  setMinSa:
   163                                  
   164 000000C1 8905(63010000)              mov     [minSa], eax
   165 000000C7 EBDE                        jmp     checkMaxSa
   166                                  
   167                                  setMaxSa:
   168                                  
   169 000000C9 8905(67010000)              mov     [maxSa], eax
   170 000000CF EBDE                        jmp     checkMinVol
   171                                  
   172                                  setMinVol:
   173                                  
   174 000000D1 891D(73010000)              mov     [minVol], ebx
   175 000000D7 EBDE                        jmp     checkMaxVol
   176                                  
   177                                  setMaxVol:
   178                                  
   179 000000D9 891D(77010000)              mov     [maxVol], ebx
   180                                  
   181                                  statsEnd:
   182                                  
   183 000000DF 49FFC3                      inc     r11
   184 000000E2 E2B2                        loop    statsStart
   185                                  
   186                                  initSetAvgs:
   187                                  
   188 000000E4 0FB61D(5E010000)            movzx   ebx, byte [num]
   189                                  
   190                                  setAvgSa:
   191                                  
   192 000000EB 8B05(5F010000)              mov     eax, [tSa]                  ; avgSa = totalSurfaceArea(n) / number of pyramids
   193 000000F1 F7F3                        div     ebx
   194 000000F3 8905(6B010000)              mov     [avgSa], eax
   195 000000F9 BA00000000                  mov     edx, 0                      ; Clear out edx so it doesn't confuse the next div instruction
   196                                  
   197                                  setAvgVol:
   198                                  
   199 000000FE 8B05(6F010000)              mov     eax, [tVol]                 ; avgVol = volume(n) / number of pyramids
   200 00000104 F7F3                        div     ebx
   201 00000106 8905(7B010000)              mov     [avgVol], eax
   202                                  
   203                                  ; -----
   204                                  ; Terminate the program
   205                                  
   206                                  exit:
   207 0000010C B801000002                  mov     rax, SYS_exit
   208 00000111 BF00000000                  mov     rdi, SUCCESS
   209 00000116 0F05                        syscall
