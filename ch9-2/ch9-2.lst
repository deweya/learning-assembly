     1                                  ; Chapter 9, exercise 2
     2                                  ; Determine if a string is a palindrome
     3                                  
     4                                  default rel
     5                                  
     6                                  ; ***************************
     7                                  
     8                                  section     .data
     9                                  
    10                                  ; Constants
    11                                  SUCCESS     equ     0
    12                                  SYS_exit    equ     0x2000001
    13                                  
    14                                  ; Variables
    15 00000000 7261636563617200        string      db      "racecar", 0        ; The string that we will check if it's a palindrome
    16 00000008 01                      isPdrome    db      1
    17                                  
    18                                  ; ***************************
    19                                  
    20                                  section     .text
    21                                  global _start
    22                                  _start:
    23                                  
    24 00000000 4C8D05(00000000)            lea     r8, [string]
    25 00000007 41BB00000000                mov     r11, 0                      ; displacement for compare
    26 0000000D B900000000                  mov     rcx, 0                      ; length of string
    27                                  
    28                                  pushStart:
    29                                  
    30 00000012 418A0408                    mov     al, [r8 + rcx]
    31 00000016 50                          push    rax
    32                                  
    33 00000017 4883F800                    cmp     rax, 0                      ; If we reached the null terminating char, then jump out of the loop
    34 0000001B 7405                        je      popStart
    35                                  
    36 0000001D 48FFC1                      inc     rcx
    37 00000020 EBF0                        jmp     pushStart
    38                                  
    39                                  popStart:
    40                                  
    41 00000022 58                          pop     rax
    42 00000023 418A1C08                    mov     bl, byte [r8 + rcx]
    43 00000027 38D8                        cmp     al, bl
    44 00000029 750B                        jne     notPdrome
    45                                      
    46 0000002B 4883F900                    cmp     rcx, 0
    47 0000002F 740C                        je      exit
    48 00000031 48FFC9                      dec     rcx
    49 00000034 EBEC                        jmp     popStart
    50                                  
    51                                  notPdrome:
    52                                  
    53 00000036 C605(08000000)00            mov     byte [isPdrome], 0
    54                                  
    55                                  exit:
    56 0000003D B801000002                  mov     rax, SYS_exit
    57 00000042 BF00000000                  mov     rdi, SUCCESS
    58 00000047 0F05                        syscall
