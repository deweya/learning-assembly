     1                                  ; Chapter 13.4.1
     2                                  ; Accept input from the console
     3                                  ; Then print the input back out to the console when LF is reached
     4                                  
     5                                  default rel
     6                                  
     7                                  %define     SYS_exit        0x2000001
     8                                  %define     SYS_read        0x2000003
     9                                  %define     SYS_write       0x2000004
    10                                  
    11                                  %define     SUCCESS         0
    12                                  %define     STDIN           0
    13                                  %define     STDOUT          1
    14                                  %define     LF              10
    15                                  %define     NULL            0
    16                                  
    17                                  %define     STRLEN          50
    18                                  
    19                                  ; **********************************
    20                                  
    21                                  section     .data
    22                                  
    23 00000000 456E746572206D6573-     prompt      db          "Enter message:", LF, NULL
    23 00000009 736167653A0A00     
    24 00000010 486572652077617320-     yourMsg     db          "Here was your message:", LF, NULL
    24 00000019 796F7572206D657373-
    24 00000022 6167653A0A00       
    25 00000028 32                      length      db          STRLEN                              ; Length of input to read from console (excluding LF and NULL)
    26                                  
    27                                  ; **********************************
    28                                  
    29                                  section     .bss
    30                                  
    31 00000000 ??                      char        resb        1                                   ; Individual character to read from input
    32 00000001 <res 34h>               input       resb        STRLEN+2                            ; Console input (including LF and NULL)
    33                                  
    34                                  ; **********************************
    35                                  
    36                                  section     .text
    37                                  global _start
    38                                  _start:
    39                                  
    40 00000000 488D3D(00000000)            lea     rdi, [prompt]
    41 00000007 E87C000000                  call    printString
    42                                  
    43 0000000C 488D3D(01000000)            lea     rdi, [input]
    44 00000013 488B35(28000000)            mov     rsi, [length]
    45 0000001A E80C000000                  call    readInput
    46                                  
    47                                  exit:
    48 0000001F B801000002                  mov     rax, SYS_exit
    49 00000024 BF00000000                  mov     rdi, SUCCESS
    50 00000029 0F05                        syscall
    51                                  
    52                                  ; -----
    53                                  ; Read input from STDIN
    54                                  ; Reads one char at a time until either:
    55                                  ;   * LF has been hit
    56                                  ;   * Max string length has been hit
    57                                  ; Args:
    58                                  ;   * rdi - input (address)
    59                                  ;   * rsi - length (byte)
    60                                  ; Syscall:
    61                                  ;   ssize_t
    62                                  ;   read(int fildes, void *buf, size_t nbyte);
    63                                  ;        rdi         rsi        rdx
    64                                  
    65                                  global readInput
    66                                  readInput:
    67                                  
    68 0000002B 4989F8                      mov     r8, rdi                                 ; input
    69 0000002E 4989F1                      mov     r9, rsi                                 ; length
    70 00000031 41BA00000000                mov     r10, 0                                  ; char counter and iterator
    71                                  
    72                                  readInputLoop:
    73                                  
    74 00000037 B803000002                  mov     rax, SYS_read
    75 0000003C BF00000000                  mov     rdi, STDIN
    76 00000041 488D35(00000000)            lea     rsi, [char]
    77 00000048 BA01000000                  mov     rdx, 1
    78 0000004D 0F05                        syscall
    79                                  
    80 0000004F 803E0A                      cmp     byte [rsi], LF
    81 00000052 7412                        je      readInputDone
    82                                  
    83 00000054 4C0FB61E                    movzx   r11, byte [rsi]
    84 00000058 4F891C10                    mov     [r8 + r10], r11
    85                                  
    86 0000005C 49FFC2                      inc     r10
    87 0000005F 4D39CA                      cmp     r10, r9
    88 00000062 7D02                        jge     readInputDone
    89                                  
    90 00000064 EBD1                        jmp     readInputLoop
    91                                  
    92                                  readInputDone:
    93                                  
    94 00000066 43C604100A                  mov     byte [r8 + r10], LF
    95 0000006B 49FFC2                      inc     r10
    96 0000006E 43C6041000                  mov     byte [r8 + r10], NULL
    97                                  
    98 00000073 488D3D(10000000)            lea     rdi, [yourMsg]
    99 0000007A E809000000                  call    printString
   100                                  
   101 0000007F 498D38                      lea     rdi, [r8]
   102 00000082 E801000000                  call    printString
   103                                  
   104 00000087 C3                          ret
   105                                  
   106                                  ; -----
   107                                  ; Prints a string to the console
   108                                  ; Args:
   109                                  ;   * rdi - message (address)
   110                                  ; Returns:
   111                                  ;   * rax - number of bytes written to the console
   112                                  ; Syscall:
   113                                  ;   ssize_t
   114                                  ;   write(int fildes, const void *buf, size_t nbyte);
   115                                  ;         rdi         rsi              rdx
   116                                  
   117                                  global printString
   118                                  printString:
   119                                  
   120 00000088 B804000002                  mov     rax, SYS_write
   121 0000008D BA00000000                  mov     rdx, 0                  ; 3rd arg
   122 00000092 4889FE                      mov     rsi, rdi                ; 2nd arg
   123 00000095 BF01000000                  mov     rdi, STDOUT             ; 1st arg
   124                                  
   125 0000009A 4989F2                      mov     r10, rsi                ; use r10 to iterate so we don't knock rsi off
   126                                  
   127                                  getLength:
   128                                  
   129                                      ; Get the length of the string so we know how many bytes to read from the buffer
   130                                  
   131 0000009D 41803A00                    cmp     byte [r10], NULL
   132 000000A1 7408                        je      doPrint
   133 000000A3 49FFC2                      inc     r10                     ; increase the pointer one byte
   134 000000A6 48FFC2                      inc     rdx                     ; increase the size of nbytes
   135 000000A9 EBF2                        jmp     getLength
   136                                  
   137                                  doPrint:
   138                                  
   139 000000AB 0F05                        syscall
   140 000000AD C3                          ret
