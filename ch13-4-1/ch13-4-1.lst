     1                                  ; Chapter 13.4.1
     2                                  ; Accept input from the console
     3                                  ; Then print the input back out to the console when LF is reached
     4                                  
     5                                  default rel
     6                                  
     7                                  %define     SYS_exit        0x2000001
     8                                  %define     SYS_read        0x2000003
     9                                  %define     SYS_write       0x2000004
    10                                  
    11                                  %define     SUCCESS         0
    12                                  %define     STDIN           0
    13                                  %define     STDOUT          1
    14                                  %define     LF              10
    15                                  %define     NULL            0
    16                                  
    17                                  %define     STRLEN          50
    18                                  
    19                                  ; **********************************
    20                                  
    21                                  section     .data
    22                                  
    23 00000000 456E746572206D6573-     prompt      db          "Enter message:", LF, NULL
    23 00000009 736167653A0A00     
    24 00000010 32                      length      db          STRLEN                              ; Length of input to read from console (excluding LF and NULL)
    25                                  
    26                                  ; **********************************
    27                                  
    28                                  section     .bss
    29                                  
    30 00000000 ??                      char        resb        1                                   ; Individual character to read from input
    31 00000001 <res 34h>               input       resb        STRLEN+2                            ; Console input (including LF and NULL)
    32                                  
    33                                  ; **********************************
    34                                  
    35                                  section     .text
    36                                  global _start
    37                                  _start:
    38                                  
    39 00000000 488D3D(00000000)            lea     rdi, [prompt]
    40 00000007 E85B000000                  call    printString
    41                                  
    42 0000000C 488D3D(01000000)            lea     rdi, [input]
    43 00000013 488B35(10000000)            mov     rsi, [length]
    44 0000001A E80C000000                  call    readInput
    45                                  
    46                                  exit:
    47 0000001F B801000002                  mov     rax, SYS_exit
    48 00000024 BF00000000                  mov     rdi, SUCCESS
    49 00000029 0F05                        syscall
    50                                  
    51                                  ; -----
    52                                  ; Read input from STDIN
    53                                  ; Reads one char at a time until either:
    54                                  ;   * LF has been hit
    55                                  ;   * Max string length has been hit
    56                                  ; Args:
    57                                  ;   * rdi - input (address)
    58                                  ;   * rsi - length (byte)
    59                                  ; Syscall:
    60                                  ;   ssize_t
    61                                  ;   read(int fildes, void *buf, size_t nbyte);
    62                                  ;        rdi         rsi        rdx
    63                                  
    64                                  global readInput
    65                                  readInput:
    66                                  
    67 0000002B 4989F8                      mov     r8, rdi                                 ; input
    68 0000002E 4989F1                      mov     r9, rsi                                 ; length
    69 00000031 41BA00000000                mov     r10, 0                                  ; char counter and iterator
    70                                  
    71                                  readInputLoop:
    72                                  
    73 00000037 B803000002                  mov     rax, SYS_read
    74 0000003C BF00000000                  mov     rdi, STDIN
    75 00000041 488D35(00000000)            lea     rsi, [char]
    76 00000048 BA01000000                  mov     rdx, 1
    77 0000004D 0F05                        syscall
    78                                  
    79 0000004F 803E0A                      cmp     byte [rsi], LF
    80 00000052 7412                        je      readInputDone
    81                                  
    82 00000054 4C0FB61E                    movzx     r11, byte [rsi]
    83 00000058 4F891C10                    mov     [r8 + r10], r11
    84                                  
    85 0000005C 49FFC2                      inc     r10
    86 0000005F 4D39CA                      cmp     r10, r9
    87 00000062 7D02                        jge     readInputDone
    88                                  
    89 00000064 EBD1                        jmp     readInputLoop
    90                                  
    91                                  readInputDone:
    92                                  
    93 00000066 C3                          ret
    94                                  
    95                                  ; -----
    96                                  ; Prints a string to the console
    97                                  ; Args:
    98                                  ;   * rdi - message (address)
    99                                  ; Returns:
   100                                  ;   * rax - number of bytes written to the console
   101                                  ; Syscall:
   102                                  ;   ssize_t
   103                                  ;   write(int fildes, const void *buf, size_t nbyte);
   104                                  ;         rdi         rsi              rdx
   105                                  
   106                                  global printString
   107                                  printString:
   108                                  
   109 00000067 B804000002                  mov     rax, SYS_write
   110 0000006C BA00000000                  mov     rdx, 0                  ; 3rd arg
   111 00000071 4889FE                      mov     rsi, rdi                ; 2nd arg
   112 00000074 BF01000000                  mov     rdi, STDOUT             ; 1st arg
   113                                  
   114 00000079 4989F2                      mov     r10, rsi                ; use r10 to iterate so we don't knock rsi off
   115                                  
   116                                  getLength:
   117                                  
   118                                      ; Get the length of the string so we know how many bytes to read from the buffer
   119                                  
   120 0000007C 41803A00                    cmp     byte [r10], NULL
   121 00000080 7408                        je      doPrint
   122 00000082 49FFC2                      inc     r10                     ; increase the pointer one byte
   123 00000085 48FFC2                      inc     rdx                     ; increase the size of nbytes
   124 00000088 EBF2                        jmp     getLength
   125                                  
   126                                  doPrint:
   127                                  
   128 0000008A 0F05                        syscall
   129 0000008C C3                          ret
