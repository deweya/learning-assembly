     1                                  ; Chapter 10, exercise 1
     2                                  ; Convert an integer into a string
     3                                  
     4                                  default rel
     5                                  
     6                                  ; ***************************
     7                                  
     8                                  section     .data
     9                                  
    10                                  ; Constants
    11                                  SUCCESS     equ     0
    12                                  SYS_exit    equ     0x2000001
    13                                  
    14                                  ; Variables
    15 00000000 7B                      integer     db      123
    16 00000001 00                      length      db      0
    17 00000002 0A                      b10         db      10
    18                                  
    19                                  ; ***************************
    20                                  
    21                                  section     .bss
    22                                  
    23 00000000 ????????                string      resb    4
    24                                  
    25                                  ; ***************************
    26                                  
    27                                  section     .text
    28                                  global _start
    29                                  _start:
    30                                  
    31 00000000 8A05(00000000)              mov     al, [integer]
    32 00000006 4C8D05(00000000)            lea     r8, [string]
    33                                  
    34                                  divLoop:
    35                                  
    36                                      ; Get the length of the integer
    37                                      ; Push the individual digits to the stack
    38                                  
    39 0000000D B400                        mov     ah, 0
    40 0000000F FE05(01000000)              inc     byte [length]
    41 00000015 F635(02000000)              div     byte [b10]
    42 0000001B 88E2                        mov     dl, ah                  ; Move remainder to dl and push to stack
    43 0000001D 52                          push    rdx
    44 0000001E 3C00                        cmp     al, 0                   ; If integer == 0, then we have finished dividing
    45 00000020 75EB                        jne     divLoop
    46 00000022 8A0D(01000000)              mov     cl, [length]            ; Set up loop counter
    47                                  
    48                                  convert:
    49                                  
    50 00000028 58                          pop     rax
    51 00000029 0430                        add     al, 48
    52 0000002B 43880408                    mov     [r8 + r9], al
    53 0000002F 49FFC1                      inc     r9
    54 00000032 E2F4                        loop    convert
    55                                  
    56                                  exit:
    57 00000034 B801000002                  mov     rax, SYS_exit
    58 00000039 BF00000000                  mov     rdi, SUCCESS
    59 0000003E 0F05                        syscall
