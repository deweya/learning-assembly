     1                                  ; Chapter 12, exercise 1
     2                                  ; Implement the "stats1" void function that does the following:
     3                                  ;   * Finds the sum of a list of numbers
     4                                  ;   * Finds the average of a list of numbers
     5                                  
     6                                  default rel
     7                                  
     8                                  ; *********************
     9                                  
    10                                  ; HLL call:
    11                                  ;   stats1(arr, len, sum, ave);
    12                                  ; -----
    13                                  ; Arguments:
    14                                  ;   arr, address        – rdi       ; dword
    15                                  ;   len, dword value    – rsi       ; dword
    16                                  ;   sum, address        – rdx       ; dword
    17                                  ;   ave, address        - rcx       ; dword
    18                                  
    19                                  section     .text
    20                                  global stats1
    21                                  stats1:
    22                                  
    23 00000000 B800000000                  mov     rax, 0              ; Holds the running sum
    24 00000005 41B800000000                mov     r8, 0               ; Helps with iterating
    25 0000000B 4989D2                      mov     r10, rdx            ; Save array address, since div will wipe it out
    26                                  
    27                                  sumLoop:
    28                                  
    29 0000000E 42030487                    add     eax, [rdi + r8*4]
    30 00000012 49FFC0                      inc     r8
    31 00000015 4939F0                      cmp     r8, rsi
    32 00000018 75F4                        jne     sumLoop
    33 0000001A 4989C1                      mov     r9, rax             ; Store the sum in r9
    34                                  
    35                                  calcAvg:
    36                                  
    37 0000001D 99                          cdq                         ; Fancy way to zero out rdx for division
    38 0000001E F7F6                        div     esi
    39                                  
    40                                  exit:
    41                                  
    42 00000020 4D890A                      mov     [r10], r9
    43 00000023 488901                      mov     [rcx], rax
    44 00000026 C3                          ret
