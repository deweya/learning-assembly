     1                                  ; Chapter 7, exercise 9
     2                                  ; Iteratively find the nth Fibonacci number
     3                                  ;
     4                                  ; For example, the 10th Fibonacci number is 55
     5                                  ;              the 5th Fibonacci number is 5
     6                                  
     7                                  DEFAULT REL
     8                                  
     9                                  ; *********************
    10                                  
    11                                  section     .data
    12                                  
    13                                  ; Constants
    14                                  SUCCESS     equ     0
    15                                  SYS_exit    equ     0x2000001
    16                                  
    17                                  ; Variables
    18 00000000 0A                      n           db      10                  ; Argument to fib(n)
    19 00000001 00000000                fibnum      dd      0                   ; The nth Fibonacci number
    20                                  
    21                                  ; *********************
    22                                  
    23                                  section     .text
    24                                  global _start
    25                                  _start:
    26                                  
    27 00000000 B800000000                  mov     eax, 0                      ; eax will contain the (latest - 1) Fibonacci number
    28 00000005 BB01000000                  mov     ebx, 1                      ; ebx will contain the latest Fibonacci number
    29 0000000A B901000000                  mov     ecx, 1                      ; ecx will be used for looping. It also marks the currently iterated Fibonacci number
    30                                  
    31                                  fibLoop:
    32                                  
    33 0000000F 3B0D(00000000)              cmp     ecx, [n]
    34 00000015 740A                        je      result
    35 00000017 89DA                        mov     edx, ebx                    ; edx contains the old ebx value (so we can assign it to eax)
    36 00000019 01C3                        add     ebx, eax
    37 0000001B FFC1                        inc     ecx
    38 0000001D 89D0                        mov     eax, edx
    39 0000001F EBEE                        jmp     fibLoop
    40                                  
    41                                  result:
    42                                  
    43 00000021 891D(01000000)              mov     [fibnum], ebx
    44                                  
    45                                  exit:
    46 00000027 B801000002                  mov     rax, SYS_exit
    47 0000002C BF00000000                  mov     rdi, SUCCESS
    48 00000031 0F05                        syscall
